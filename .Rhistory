install.packages('devtools')
install_github("hantao-wu/FarPava")
??install_github
library(remotes)
install_github("hantao-wu/FarPava")
install_github("hantao-wu/FarPava")
install_github("hantao-wu/FarPava")
install_github("hantao-wu/FarPava")
install_github("hantao-wu/FarPava")
install.packages(c("av", "bit", "brew", "broom", "bslib", "callr", "commonmark", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "deSolve", "digest", "dlm", "dotCall64", "dplyr", "dtplyr", "evaluate", "evd", "fBasics", "fda", "fGarch", "fields", "fontawesome", "forcats", "forecast", "fracdiff", "gargle", "gee", "generics", "gert", "gganimate", "ggmap", "gh", "gitcreds", "googlesheets4", "haven", "hms", "htmltools", "httpuv", "httr", "jpeg", "jsonlite", "kernlab", "knitr", "ks", "lme4", "locfit", "lubridate", "magrittr", "mapdata", "maps", "maptools", "markdown", "MatrixModels", "mclust", "minqa", "modelr", "nloptr", "openssl", "pcaPP", "pkgbuild", "plyr", "png", "pracma", "processx", "ps", "purrr", "quantreg", "rainbow", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "reprex", "rgdal", "rgl", "rmarkdown", "rstudioapi", "rversions", "rvest", "sass", "shiny", "sp", "spam", "stringi", "stringr", "strucchange", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "timeSeries", "tinytex", "tseries", "tweenr", "urca", "vctrs", "vroom", "whisker", "xfun", "xts", "yaml", "zip", "zoo"))
devtools::install_github("hantao-wu/FarPava")
devtools::install_github("hantao-wu/FarPava")
library(devtools)
install.packages(devtools)
install.packages('devtools')
devtools::install_github("hantao-wu/FarPava")
install.packages('processx')
devtools::install_github("hantao-wu/FarPava")
devtools::install_github("JasonCho0914/AsyncCluster",
build_vignettes = TRUE)
install_github("hantao-wu/FarPava")
devtools::install_github("hantao-wu/FarPava")
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
devtools::install_github("hantao-wu/FarPava")
devtools::install_github("hantao-wu/FarPava")
.libPaths()
devtools::install_github("hantao-wu/FarPava")
install.packages('magrittr')
devtools::install_github("hantao-wu/FarPava")
list.files()
Sys.setenv(R_REMOTES_STANDALONE="true")
remotes::install_github("hantao-wu/FarPava")
remotes::install_github("hantao-wu/FarPava",build=FALSE)
if(!require(installr)) {
install.packages("installr");
require(installr)
}
updateR()
updateR()
remotes::install_github("hantao-wu/FarPava")
devtools::install_github("hantao-wu/FarPava")
remote::install_github("hantao-wu/FarPava")
remote::install_github("hantao-wu/FarPava")
library('remote')
library(remote)
library(devtools)
devtools::install_github("hantao-wu/FarPava")
devtools::install_github("hantao-wu/FarPava")
Sys.getenv('PATH')
library(pkgbuild)
library(pak)
install.packages('pak')
require(pak)
?pkg_install
pak::pkg_install("hantao-wu/FarPava")
.Last.error
devtools::install_github("hantao-wu/FarPava")
devtools::check()
devtools::check()
Sys.setenv(BINPREF = "C:/rtools42/mingw64/bin/")
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
Sys.getenv("PATH")
Sys.getenv("RSTUDIO_PANDOC")
rmarkdown::render()
Sys.setenv(RSTUDIO_PANDOC="/path/to/pandoc/directory")
rmarkdown::render()
devtools::document()
devtools::check()
rmarkdown::render()
